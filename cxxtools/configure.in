AC_INIT(cxxtools, 1.4.0pre1, [Tommi Maekitalo <tommi@tntnet.org>])
AM_INIT_AUTOMAKE(cxxtools, 1.4.0pre1)

abi_current=3
abi_revision=1
abi_age=0
sonumber=${abi_current}:${abi_revision}:${abi_age}
AC_SUBST(sonumber)

unset CDPATH

AC_CONFIG_HEADERS([src/config.h])
AC_CONFIG_HEADERS([include/cxxtools/config.h])
AC_CONFIG_SRCDIR([src/base64stream.cpp])
AC_CONFIG_SUBDIRS(libltdl)

AC_HEADER_DIRENT

AM_ICONV
AM_CONDITIONAL(MAKE_ICONV, test "$am_cv_func_iconv" = yes)

AC_PROG_CC(gcc-3.0 gcc cc CC)
AC_PROG_CXX(g++-3.0 g++ c++ CC)

AC_CHECK_LIB(nsl, setsockopt)
AC_CHECK_LIB(socket, accept)
AC_SEARCH_LIBS(fdatasync, [rt posix4])
AC_SUBST(NETWORK_LIBS)

AC_LANG(C++)

AC_LIBTOOL_DLOPEN
AC_LIBLTDL_CONVENIENCE
AC_PROG_LIBTOOL
AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)

AC_HAVE_HEADERS(sstream)

AC_ARG_WITH(
   [logging],
   AS_HELP_STRING([--with-logging],
                  [specify logging-library. Accepted arguments:
                   log4cxx, log4cplus, simple, disable]),
   [ ac_loggertype=$withval ],
   [ ac_loggertype=probe ])

if test "$ac_loggertype" = "log4cxx" -o "$ac_loggertype" = "probe"; then
   AC_CHECK_HEADER(
      [log4cxx/logger.h],
      [ AC_DEFINE([CXXTOOLS_LOG_LOG4CXX],
                  [],
                  [use log4cxx for logging])
        ac_loggertype=log4cxx ],
      [ if test "$ac_loggertype" = "log4cxx"; then
          AC_MSG_ERROR(log4cxx not available)
        fi
      ]
   )
fi

if test "$ac_loggertype" = "log4cplus" -o "$ac_loggertype" = "probe"; then
   AC_CHECK_HEADER(
      [log4cplus/logger.h],
      [ AC_DEFINE([CXXTOOLS_LOG_LOG4CPLUS],
                  [],
                  [use log4cplus for logging])
        ac_loggertype=log4cplus ],
      [ if test "$ac_loggertype" = "log4cplus"; then
          AC_MSG_ERROR(log4cplus not available)
        fi
      ]
   )
fi

if test "$ac_loggertype" = "simple" -o "$ac_loggertype" = "probe"; then
  AC_DEFINE([CXXTOOLS_LOG_LOGBUILTIN], [], [use simple logging])
  ac_loggertype=simple
elif test "$ac_loggertype" = "disable"; then
  AC_DEFINE([CXXTOOLS_LOG_DISABLE], [], [disable logging])
fi

case "$ac_loggertype" in
    log4cxx)
        AC_MSG_NOTICE([loggertype is log4cxx])
        CXXTOOLS_LOG_LDFLAGS=-llog4cxx
        CXXTOOLS_LOGGING=log4cxx
        ;;

    log4cplus)
        AC_MSG_NOTICE([loggertype is log4cplus])
        CXXTOOLS_LOG_LDFLAGS=-llog4cplus
        CXXTOOLS_LOGGING=log4cplus
        ;;

    simple)
        AC_MSG_NOTICE([loggertype is simple])
        CXXTOOLS_LOG_LDFLAGS=-lcxxtools-log
        CXXTOOLS_LOGGING=simple
        ;;

    disabled)
        AC_MSG_NOTICE([logging is disabled])
        CXXTOOLS_LOGGING=disabled
        ;;

    *)
        AC_MSG_ERROR([unknown loggertype $ac_loggertype])
        ;;
esac

CXXTOOLS_CXXFLAGS='-I${includedir}'
CXXTOOLS_LDFLAGS='-L${libdir} -lcxxtools'

AC_SUBST(CXXTOOLS_CXXFLAGS)
AC_SUBST(CXXTOOLS_LDFLAGS)
AC_SUBST(CXXTOOLS_LOG_LDFLAGS)
AC_SUBST(CXXTOOLS_LOGGING)

AC_ARG_WITH(
    [libtool],
    AS_HELP_STRING([--without-libtool],
                   [use libtool for dynamic loading of shared libraries]),
    ac_use_libtool=$withval,
    ac_use_libtool=yes,
    )

if test "$ac_use_libtool" = "yes"; then
AC_DEFINE([USE_LIBTOOL], [], [use libtool for dynamic loading of shared libraries])
fi

AC_CONFIG_FILES([
  Makefile
  src/Makefile
  include/Makefile
  demo/Makefile
  cxxtools-config
  ])

AC_OUTPUT

chmod +x cxxtools-config
