AC_INIT(cxxtools, 1.2.2, [Tommi Maekitalo <tommi@tntnet.org>])
AM_INIT_AUTOMAKE(cxxtools, 1.2.2)

abi_current=2
abi_revision=1
abi_age=0
sonumber=${abi_current}:${abi_revision}:${abi_age}
AC_SUBST(sonumber)

unset CDPATH

AC_CONFIG_HEADERS([src/config.h])
AC_CONFIG_HEADERS([include/cxxtools/config.h])
AC_CONFIG_SRCDIR([src/base64stream.cpp])
AC_CONFIG_SUBDIRS(libltdl)

AC_HEADER_DIRENT

AM_ICONV
AM_CONDITIONAL(MAKE_ICONV, test "$am_cv_func_iconv" = yes)

AC_PROG_CC(gcc-3.0 gcc cc CC)
AC_PROG_CXX(g++-3.0 g++ c++ CC)
AC_LANG(C++)

AC_LIBTOOL_DLOPEN
AC_LIBLTDL_CONVENIENCE
AC_PROG_LIBTOOL
AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)

AC_HAVE_HEADERS(sstream)

ac_use_log4cplus=yes
ac_loggertype=stdout

AC_ARG_WITH(
   [log4cplus],
   AS_HELP_STRING([--without-log4cplus],
                  [don't use log4cplus for logging]),
   [ac_use_log4cplus=$withval])

if test "e_$ac_use_log4cplus" = e_yes; then
   AC_CHECK_HEADER(
      [log4cplus/logger.h],
      [ AC_DEFINE([CXXTOOLS_USE_LOG4CPLUS],
                  [],
                  [check for log4cplus])
        ac_loggertype=log4cplus
        logger_ldflags=-llog4cplus ],
      [AC_MSG_WARN(log4cplus not available)]
   )
fi

if test $ac_loggertype = stdout; then
  AC_DEFINE(CXXTOOLS_USE_LOGSTDOUT, [], [use simple logging])
fi

AC_SUBST(logger_ldflags)

AC_CONFIG_FILES([
  Makefile
  src/Makefile
  include/Makefile
  demo/Makefile
  ])

AC_OUTPUT
