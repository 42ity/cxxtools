#! /bin/sh

prefix=@prefix@
exec_prefix=@exec_prefix@
includedir=@includedir@
libdir=@libdir@

usage()
{
    cat <<EOF
Usage: $0 [OPTION]

Known values for OPTION are:

  --libs            print library linking information
  --log-libs        print linking information for cxxtools metalogging
  --cxxflags        print pre-processor and compiler flags
  --logging         configured logging type
  --properties app  print logging-properties-template for application "app"
  --help            display this help and exit
  --version         output version information
EOF

    exit $1
}

start_template()
{
  cat <<EOF
# sample logging-properties for application APP
# put this in APP.properties and use:
#   log_init("APP.properties");
# in your application to initialize logging
#
# define categories with:
#   log_define("some.category")
# this defines a static function, so you must put it outside other functions.
# you can define a category per file or a category per namespace.
#
# print logging-messages with:
#   log_fatal("some fatal message");
#   log_error("some error message");
#   log_warn("some warn message");
#   log_info("some info message");
#   log_debug("some debug message");
#
EOF
}

log4cxx_template()
{
  start_template
  cat <<EOF
# define the root-category
log4j.rootLogger=WARN, console

# define logger-categories
log4j.logger.APP=INFO

# console-appender
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=TTCCLayout
log4j.appender.console.layout.DateFormat=ISO8601

# rolling-file-appender
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=APP.log
log4j.appender.file.MaxFileSize=1MB
log4j.appender.file.MaxBackupIndex=2
log4j.appender.file.layout=TTCCLayout
log4j.appender.file.layout.ContextPrinting=enabled
log4j.appender.file.layout.DateFormat=ISO8601
EOF
}

log4cplus_template()
{
  start_template
  cat <<EOF
# define the root-category
log4cplus.rootLogger=WARN, console

# define logger-categories
log4cplus.logger.APP=INFO

# console-appender
log4cplus.appender.console=log4cplus::ConsoleAppender
log4cplus.appender.console.layout=log4cplus::TTCCLayout
log4cplus.appender.console.ImmediateFlush=true

# rolling-file-appender
log4cplus.appender.file=log4cplus::RollingFileAppender
log4cplus.appender.file.File=APP.log
log4cplus.appender.file.layout=log4cplus::TTCCLayout
log4cplus.appender.file.MaxFileSize=500KB
log4cplus.appender.file.MaxBackupIndex=5
log4cplus.appender.file.ImmediateFlush=true
EOF
}

simple_template()
{
  start_template
  cat <<EOF
rootLogger=WARN

# define logger-categories
logger.APP=INFO

# uncomment if you want to log to a file instead of console
#file=APP.log
EOF
}

disabled_template()
{
  :
}

if test $# -eq 0; then
    usage
fi

while test $# -gt 0; do
    case "$1" in

    --version)
        echo @VERSION@
        exit 0
        ;;

    --help)
        usage
        ;;

    --cxxflags)
        echo @CXXTOOLS_CXXFLAGS@
        ;;

    --log-libs)
        echo @CXXTOOLS_LDFLAGS@ @CXXTOOLS_LOG_LDFLAGS@
        ;;

    --libs)
        echo @CXXTOOLS_LDFLAGS@ 
        ;;

    --logging)
        echo @CXXTOOLS_LOGGING@ 
        ;;

    --properties)
        if test $# -gt 1
        then
          @CXXTOOLS_LOGGING@_template | sed "s/APP/$2/"
          shift
        else
          usage
        fi
        ;;

    *)
        usage
        exit 1
        ;;
    esac
    shift
done

exit 0
